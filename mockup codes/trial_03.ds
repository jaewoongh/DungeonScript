☃                                                       
         ____                          _____         _     _   
        |    \ _ _ ___ ___ ___ ___ ___|   __|___ ___|_|___| |_ 
        |  |  | | |   | . | -_| . |   |__   |  _|  _| | . |  _|
        |____/|___|_|_|_  |___|___|_|_|_____|___|_| |_|  _|_|  
                      |___|                           |_|      
        -- A language for retro first person dungeon crawler --

    This is a mockup writing test to decide semantic and syntax of the language
    General rules are:
        * Commentations follow the most uncommon syntax: ☃ .. ☃ and ☃☃ ..
        * Every code is case-insensitive
        * Legal charactres for naming are [a-zA-Z0-9_-], not starting with numbers
        * Positions and sizes are relative to screen width and height

    Best look on space indentation, width 4.

    by Jaewoong Hwang, April 2014

 ____ ____ ____ ____ ____ _________ ____ ____ 
||T |||r |||i |||a |||l |||       |||# |||3 ||
||__|||__|||__|||__|||__|||_______|||__|||__||
|/__\|/__\|/__\|/__\|/__\|/_______\|/__\|/__\|

-- Let's implement ECS more explicitly

    Implementation of ECS:
        * There are THING, CHARM, and HABIT for ENTITY, COMPONENT, and SYSTEM respectedly.
        * THINGs can be made with CHARMs
        * HABITs are executed with matching CHARMs
☃


☃ FIRST STEP: Make THINGs with CHARMs
  A THING is what is inside of curly braces.
  THINGs are game objects -- something that is represented in game somehow.
  Inside braces, CHARMs can be added with values using ':'.
  CHARMs are properties of the THING.
  CHARMs can be numbers, or text.
  CHARMs without ':' are tags, and is equivalent to ': true'.   ☃

{   meta,
    title: "Trial Dungeon",
    author: "Jaewoong Hwang",
    webpage: "http://jaewoong.info"
}

{   player,
    image-src: "./assets/images/player.png",
    pos-x: 0,
    pos-y: 0,
    hp: 20,
    hp-max: 20
}

{   }


☃ SECOND STEP: Make HABITs


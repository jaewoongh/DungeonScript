/*                                                       
		 ____                          _____         _     _   
		|    \ _ _ ___ ___ ___ ___ ___|   __|___ ___|_|___| |_ 
		|  |  | | |   | . | -_| . |   |__   |  _|  _| | . |  _|
		|____/|___|_|_|_  |___|___|_|_|_____|___|_| |_|  _|_|  
		              |___|                           |_|      
		-- A language for retro first person dungeon crawler --

	This is a mockup writing test to decide semantic and syntax of the language
	General rules are:
		* Commentations follow the most common syntax: /* .. */ and // ..
		* Every code is case-insensitive
		* Legal charactres for naming are [a-zA-Z0-9_-], not starting with numbers
		* Syntax may differ section by section, each section starting with four sharps
		* Positions and sizes are relative to screen width and height

	Best look on tab indentation, width 2.

	by Jaewoong Hwang, April 2014
*/

/*
 ____ ____ ____ ____ ____ _________ ____ ____ 
||T |||r |||i |||a |||l |||       |||# |||1 ||
||__|||__|||__|||__|||__|||_______|||__|||__||
|/__\|/__\|/__\|/__\|/__\|/_______\|/__\|/__\|

-- Let's just do this --> Alright, I'm out
*/

 
#### META														// Four sharps and a space start new *section*
	title		Awesome Dungeon						// A *word* and whitespace are followed by its *value*
	author	Jaewoong Hwang


#### ASSETS
	image		title-image		./assets/images/titleimage.png			// *Type* of asset, *name* of asset, *source uri* of the asset separated by whitespace
	image		title-bg			./assets/images/titlebg.png
	music		title-bgm			./assets/musics/titlebgm.ogg

	image		player-image	./assets/images/player.png
	image		goblin-image	./assets/images/goblin.png
	image		zombie-image	./assets/images/zombie.png


#### SCREENS
	TITLE-SCREEN:											// *Name of the screen*, colon, followed by newline and list of *layers*
		title-layer											// Each layers are separated by newline, first layer being the topmost layer
		title-menu											// Menu is treated as a layer, but acts different
		title-background layer
		{{{title-bgm}}}									// Using {{{}}}, you can 'run' an asset

	NAVIGATION-SCREEN:
		minimap-layer
		navi-info-layer
		navigation-layer								// "navigation layer" is a built-in layer that shows first person view of dungeon

	COMBAT-SCREEN:
		combat-info-layer
		navigation-layer



#### LAYERS
	title-layer:											// *Name of the layer*, colon, followed by newline and codes
		title-image 		@@ c, 10				// Place title_image on *10% from top* and *horizontal center*
		'Copyright 			@@ 5, -5				// Place a text on *5%* from left and *5%* from bottom. 'Small text, "Normal text, !Big text
		"by {{author}}	@@ -5, c, right	// Text can contain meta or data value using {{}}, and it can be aligned *right* by explicitly writing it after the position

	title-background-layer:
		title-bg @@ 0, 0, left, top			// Anchor point is left-top for this image. Default value is center-center.

	minimap-layer:

	navi-info-layer:

	combat-info-layer:



#### MENUS
	title menu:
		"CONTINUE		@@ c, c		-> 
		"NEW				@@ c, 55	->
		"OPTION			@@ c, 60	->


#### DATA														// Here you can make whatever data you think you will need
	Player														// *Name of data*, white space, *value of data(optional)*
		.title	Sir											// '.' makes property-like variable for a variable
		.level	1												// Text and numbers can be value of variable
		.img		{{player_image}}				// Using {{}} lets you access to existing data; in this case, uri for the image
		.hp			10
		.hpMax	10
		.str		5
		.def		2



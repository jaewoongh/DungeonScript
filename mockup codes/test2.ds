/*                                                       
		 ____                          _____         _     _   
		|    \ _ _ ___ ___ ___ ___ ___|   __|___ ___|_|___| |_ 
		|  |  | | |   | . | -_| . |   |__   |  _|  _| | . |  _|
		|____/|___|_|_|_  |___|___|_|_|_____|___|_| |_|  _|_|  
		              |___|                           |_|      
		-- A language for retro first person dungeon crawler --

	This is a mockup writing test to decide semantic and syntax of the language
	General rules are:
		* Commentations follow the most common syntax: /* .. */ and // ..
		* Every code is case-insensitive
		* Legal charactres for naming are [a-zA-Z0-9_-], not starting with numbers
		* Syntax may differ section by section, each section starting with four sharps
		* Positions and sizes are relative to screen width and height

	Best look on tab indentation, width 2.

	by Jaewoong Hwang, April 2014
*/



#### META

/* Some meta data for the whole game */

title			Awesome Dungeon
author		Jaewoong Hwang
webpage		http://jaewoong.info/



#### ASSETS

/* Assets are assets needed to be pre-loaded.
	 Usage: [type] [name of asset] [uri for asset]
	 Other than images and musics, there are blocks, floors and ceilings.
	 Those are basically spritesheets for dungeons.		*/

image			img-title			./assets/images/titleimage.png
image			img-gameover	./assets/images/gameoverimage.png
image			img-player		./assets/images/player.png
image			img-goblin		./assets/images/monster_goblin.png
image			img-zombie		./assets/images/monster_zombie.png
music			bgm-title			./assets/musics/titlebgm.ogg
music			bgm-dungeon		./assets/musics/dungeonbgm1.ogg
music			bgm-battle		./assets/musics/battlebgm.ogg
block			blc-wall			./assets/blocks/wall.png
block			blc-door			./assets/blocks/door.png
block			blc-chest			./assets/blocks/chest.png
floor			just-floor		./assets/floors/just_floor.png
ceiling		just-ceiling	./assets/ceilings/just_ceiling.png



#### SCREENS

/* Screen is a screen and is made up with layers and a menu if needed.
	 Layers on top is to be drawn last.		*/

TITLE-SCREEN:
	title-menu
	title-layer

NAVIGATION-SCREEN:
	minimap-layer
	navi-info-layer
	navigation-layer

BATTLE-SCREEN:
	battle-menu
	battle-info-layer
	navigation-layer

GAMEOVER-SCREEN:
	gameover-layer


#### LAYERS

/* Here you can make layers that are used in SCREENS section.
	 Just like SCREENS, topmost command executes the last, making it be drawn last.		*/

title-layer:
	text-small copyright (c) 2014 Jaewoong Hwang	@@ -0.1, -0.1, right, bottom
	draw img-title	@@ 0, 0, left, top											// Usage: draw [image] @@ [x-pos], [y-pos], [optional-x-anchor], [optional-y-anchor]

minimap-layer:
	place minimap		@@ 0.05, 0.05, left, top	%% 0.2, 0.2		// Usage: place [built-in-thing] [@@position] %% [optional-width], [optional-height]

navi-info-layer:
	text {dir-now}	@@ center, 0.1													// {variable} returns a value of the variable

navigation-layer:
	place navigation	@@ center, center		%% 1, 1

battle-info-layer:
	text-big	{enemy.name}									@@ center, 0.1
	text			{player.hp} / {player.hpmax}	@@ 0.1, 0.8, left
	draw			{enemy.image}									@@ center, 0.6

gameover-layer:
	draw img-gameover		@@ 0, 0, left, top



#### MENUS

/* Menus are like layers, but every item inside it must have a rule to run.		*/

title-menu:
	text CONTINUE		@@ center, 0.5	~ menu-to-cont					// Usage: [function] [parameter] [@@ porition] [%% size] ~ [rule to run]
	text NEW				@@ center, 0.6	~ menu-to-new
	text SETTINGS		@@ center, 0.7	~ menu-to-settings

battle-menu:
	text ATTACK			@@ -0.1, 0.3, right		~ battle-attack
	text ESCAPE			@@ -0.2, 0.4, right		~ battle-escape



#### GAME-PHASES

/* Game phases are game phases like "now on main menu", "now travelling", or "now fighting".
	 Game phases are made of screens and rules.
	 Rules are applied from the bottommost one.		*/

PHASE-TITLE:
	TITLE-SCREEN
	~ rule-title

PHASE-NAVIGATION:
	NAVIGATION-SCREEN
	~ rule-
	~ rule-navigation

PHASE-BATTLE:

PHASE-GAMEOVER:



#### RULES

/* Rules are like coding-coding.
	 You can manipulate variables with conditionals, and change game phases.		*/

menu-to-cont:
	load-saved-data								// Built-in command

menu-to-new:

menu-to-settings:

locked-door:

open-chest:



#### LEGENDS

/* Set aliases characteristics for cells of maps.
	 Aliases can be any of ascii characters other than colon.
	 Usage: [alias]: [floor] [block] [ceiling] ~ [rule] ~ [more rules]	*/

.: just-floor just-ceiling													// mundane floor
#: blc-wall																					// mundane wall
-: blc-door																					// mundane door
=: blc-door ~ locked-door														// locked door
$: just-floor blc-chest just-ceiling ~ open-chest		// hopefully treasure chest




#### MAPS

/* Dungeon maps.
*/



